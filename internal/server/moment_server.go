// Code generated by goctl. DO NOT EDIT.
// Source: moment.proto

package server

import (
	"context"

	"github.com/xh-polaris/meowchat-moment-rpc/internal/logic"
	"github.com/xh-polaris/meowchat-moment-rpc/internal/svc"
	"github.com/xh-polaris/meowchat-moment-rpc/pb"
)

type MomentServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMomentServer
}

func NewMomentServer(svcCtx *svc.ServiceContext) *MomentServer {
	return &MomentServer{
		svcCtx: svcCtx,
	}
}

func (s *MomentServer) GetManyMoment(ctx context.Context, in *pb.GetManyMomentReq) (*pb.GetManyMomentResp, error) {
	l := logic.NewGetManyMomentLogic(ctx, s.svcCtx)
	return l.GetManyMoment(in)
}

func (s *MomentServer) GetMoment(ctx context.Context, in *pb.GetMomentReq) (*pb.GetMomentResp, error) {
	l := logic.NewGetMomentLogic(ctx, s.svcCtx)
	return l.GetMoment(in)
}

func (s *MomentServer) AddMoment(ctx context.Context, in *pb.AddMomentReq) (*pb.AddMomentResp, error) {
	l := logic.NewAddMomentLogic(ctx, s.svcCtx)
	return l.AddMoment(in)
}

func (s *MomentServer) UpdateMoment(ctx context.Context, in *pb.UpdateMomentReq) (*pb.UpdateMomentResp, error) {
	l := logic.NewUpdateMomentLogic(ctx, s.svcCtx)
	return l.UpdateMoment(in)
}

func (s *MomentServer) DeleteMoment(ctx context.Context, in *pb.DeleteMomentReq) (*pb.DeleteMomentResp, error) {
	l := logic.NewDeleteMomentLogic(ctx, s.svcCtx)
	return l.DeleteMoment(in)
}
